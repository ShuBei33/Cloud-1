---
# DEPLOIEMENT CLOUD-1 - INSTALLATION INFRA & WORDPRESS

# Dépôts et paquets de base
- name: Activer universe pour avoir containerd
  apt_repository:
    repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
    state: present

- name: Mettre à jour le cache APT
  apt:
    update_cache: yes

- name: Installer containerd + docker.io + docker-compose
  apt:
    name:
      - containerd
      - docker.io
      - docker-compose
    state: present

- name: Installer rsync
  apt:
    name: rsync
    state: present

# Préparation des dossiers projet & volumes
- name: Créer le dossier Inception
  file:
    path: /home/ubuntu/inception
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'

- name: Créer les dossiers de volumes pour les containers
  file:
    path: "{{ item }}"
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: '0755'
  loop:
    - /home/ubuntu/inception/mariadb
    - /home/ubuntu/inception/wordpress

# Ajouter ubuntu au groupe docker
- name: Ajouter ubuntu au groupe docker
  become: true
  user:
    name: ubuntu
    groups: docker
    append: yes

# Reboot nécessaire après ajout au groupe
- name: Reboot de la VM pour prendre en compte le nouveau groupe
  become: true
  reboot:
    msg: "Reboot après ajout ubuntu au groupe docker"
    pre_reboot_delay: 5
    reboot_timeout: 300

# Synchronisation des fichiers projet
- name: Synchroniser le projet Inception vers la VM
  synchronize:
    src: "{{ playbook_dir }}/roles/srcs/files/inception/"
    dest: /home/ubuntu/inception/
    recursive: yes
  delegate_to: localhost
  become: false

# Copier le .env si présent
- name: Copier le fichier .env s’il existe localement
  copy:
    src: "{{ playbook_dir }}/roles/srcs/files/.env"
    dest: /home/ubuntu/inception/.env
    owner: ubuntu
    group: ubuntu
    mode: '0644'
  ignore_errors: true

# Purge complète des volumes - À activer avec -e reset_volumes=true
- name: Purge complète des volumes si demandé (reset_volumes=true)
  shell: docker-compose down -v
  args:
    chdir: /home/ubuntu/inception
  when: reset_volumes | default(false)

# Lancer les conteneurs Docker
- name: Démarrer les conteneurs Docker
  shell: docker-compose up -d
  args:
    chdir: /home/ubuntu/inception

# Installer WP-CLI si absent dans le conteneur WordPress
- name: Installer WP-CLI dans le conteneur WordPress (si absent)
  shell: |
    docker exec wordpress sh -c "\
      [ -x /usr/local/bin/wp ] || \
      (curl -s -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
       chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp)"
  args:
    executable: /bin/bash

# Attendre que wp-config.php soit prêt dans le conteneur
- name: Attendre que wp-config.php soit présent dans le conteneur
  shell: docker exec wordpress test -f /var/www/wordpress/wp-config.php
  register: wp_config_check
  retries: 10
  delay: 5
  until: wp_config_check.rc == 0

# Remplacer les URLs du site (si estoffel est encore présent)
- name: Remplacer les URLs dans WordPress
  shell: >
    docker exec wordpress wp search-replace 'https://estoffel.42.fr' 'https://cloud1-rhes.duckdns.org' --path=/var/www/wordpress --allow-root
  register: wp_replace
  failed_when: "'Error' in wp_replace.stderr"
  changed_when: "'https://cloud1-rhes.duckdns.org' in wp_replace.stdout"
  args:
    executable: /bin/bash
